<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous" />
  <link href="/css/style.css" rel="stylesheet" type="text/css" />
  <title>Index page</title>
  <script>
    function checkCrashed() {

      const xhr = new XMLHttpRequest();

      xhr.open("POST", "/checkCrashed");
      document.getElementById("APIstatus").style.color = "black";

      document.getElementById("APIstatus").innerText =
        "CheckCrashed API Processing....";
      console.log("start api data...");
      xhr.onreadystatechange = function () {
        if (xhr.status === 200) {
          document.getElementById("APIstatus").innerText =
            "Processing Done, Check latest crashed Report";
        } else if (xhr.status === 500) {
          document.getElementById("APIstatus").innerText =
            "Throwing Error By Crashed API..";
          document.getElementById("APIstatus").style.color = "red";
        }
      };

      xhr.send();
    }
    function checkPrePost() {
      const xhr = new XMLHttpRequest();

      xhr.open("POST", "/compare-start");
      document.getElementById("prepostStatus").style.color = "black";

      document.getElementById("prepostStatus").innerText =
        "check pre/post Process Starting....";

      xhr.onreadystatechange = function () {
        if (xhr.status === 200) {
          document.getElementById("prepostStatus").innerText =
            "Processing Done, ";
        } else if (xhr.status === 500) {
          document.getElementById("prepostStatus").innerText =
            "Throwing Error By check pre/post processing..";
          document.getElementById("prepostStatus").style.color = "red";
        }
      };
      xhr.send();
    }
    function backupPdf() {

      var params = {
        "orgName": document.getElementById("filterTypePDF").value,

      }

      const xhr = new XMLHttpRequest();

      xhr.open("POST", "/inovice-download");
      // xmlhttp.setRequestHeader('Authorization', 'x-access-token ' + process.env.TOKEN);
      document.getElementById("PDFAPIstatus").style.color = "black";

      document.getElementById("PDFAPIstatus").innerText =
        "Backup Process Starting....";
      console.log("start api data...");
      xhr.onreadystatechange = function () {
        if (xhr.status === 200) {
          document.getElementById("PDFAPIstatus").innerText =
            "Processing Done, ";
        } else if (xhr.status === 500) {
          document.getElementById("PDFAPIstatus").innerText =
            "Throwing Error By Backup processing..";
          document.getElementById("PDFAPIstatus").style.color = "red";
        }
      };
      xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
      xhr.send(JSON.stringify(
        params
      ))

    }
    function hardCodeTest() {
      const xhr = new XMLHttpRequest();

      xhr.open("GET", "/hardCodeTest");

      xhr.send();
    }

    function checkPaymentCalculationTest() {
      const xhr = new XMLHttpRequest();

      xhr.open("GET", "/checkPaymentCalculation");

      xhr.send();
    }


    function downloadCsv() {


      var params = {
        "orgName": document.getElementById("filterType").value,

      }
      const xhr = new XMLHttpRequest();

      xhr.open("POST", "/downloadCsv");
      document.getElementById("CSVAPIstatus").style.color = "black";

      document.getElementById("CSVAPIstatus").innerText =
        "CSV Store Process Starting....";
      console.log("start api data...");
      xhr.onreadystatechange = function () {
        if (xhr.status === 200) {
          document.getElementById("CSVAPIstatus").innerText =
            "Processing Done, ";
        } else if (xhr.status === 500) {
          document.getElementById("CSVAPIstatus").innerText =
            "Throwing Error By CSV Store processing..";
          document.getElementById("CSVAPIstatus").style.color = "red";
        }
      };
      xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
      xhr.send(JSON.stringify(
        params
      ))
    }
    function resetTable() {

      var params = {
        "oId": document.getElementById("filterTypeReset").value,

      }
      const xhr = new XMLHttpRequest();

      xhr.open("DELETE", "/resetAllTable");
      document.getElementById("resetTypePDF").style.color = "black";

      document.getElementById("resetTypePDF").innerText =
        "Reset Table Process Starting....";
      console.log("start api data...");
      xhr.onreadystatechange = function () {
        if (xhr.status === 200) {
          document.getElementById("resetTypePDF").innerText =
            "Processing Done, ";
        } else if (xhr.status === 500) {
          document.getElementById("resetTypePDF").innerText =
            "Throwing Error By reset processing..";
          document.getElementById("resetTypePDF").style.color = "red";
        } else if (xhr.status === 422) {
          document.getElementById("resetTypePDF").innerText =
            "Throwing Error By reset processing..";
          document.getElementById("resetTypePDF").style.color = "red";
        }
      };
      xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");


      xhr.send(JSON.stringify(
        params
      ))
    }


    function filterTypeSelected() {
      var filterValue = document.getElementById("filterTypeOrderCheck").value;

    }

    async function importFile() {


      var name = document.getElementById("fileInput");

      if (name.files.item(0).name.endsWith('.csv')) {
        console.log(name.files[0], "name")

        try {



          const file = name.files[0];
          const formData = new FormData();
          formData.append("myFile", file);
          let status = true;
          if (status === true) {
            document.getElementById("statusOfSheet").innerText =
              "Checking the Sheet Data with DB";
            document.getElementById("statusOfSheet").style.color = "green";
            document.getElementById("statusOfSheet").style.marginTop = "10px";
            document.getElementById("statusOfSheet").style.fontSize = "20px";



          }
          const response = await fetch("/checkPriceCSVSheetData", {
            method: "POST",
            body: formData,
          }).then((res) => {
            console.log(res.status, "res");

            if (res.status) {
              status = false
            }
            document.getElementById("statusOfSheet").style.marginTop = "10px";
            document.getElementById("statusOfSheet").style.fontSize = "20px";
            if (res.status === 200) {
              document.getElementById("statusOfSheet").innerText =
                "Files Upload Succesfully to DO Space";
            } else if (res.status === 500) {
              document.getElementById("statusOfSheet").innerText =
                "Throwing Error By reset processing..";
              document.getElementById("statusOfSheet").style.color = "red";
            } else if (res.status === 422) {
              document.getElementById("statusOfSheet").innerText =
                "Throwing Error By reset processing..";
              document.getElementById("statusOfSheet").style.color = "red";
            }
          });
        } catch (e) {
          console.log(e, "e");
        }

      } else {
        alert("Please choose csv file");
        document.getElementById('fileInput').value = '';
      }

    }



    async function importFileShipNotice() {


      var name = document.getElementById("fileInputShipNotice");
      if (name.files.item(0).name.endsWith('.csv')) {
        console.log(name.files[0], "name")
        try {
          const file = name.files[0];
          const formData = new FormData();
          formData.append("myFile", file);
          let status = true;
          if (status === true) {
            document.getElementById("statusOfSheetShipNotice").innerText =
              "Checking the Sheet Data with DB";
            document.getElementById("statusOfSheetShipNotice").style.color = "green";
            document.getElementById("statusOfSheetShipNotice").style.marginTop = "10px";
            document.getElementById("statusOfSheetShipNotice").style.fontSize = "20px";



          }
          const response = await fetch("/checkShipNoticeData", {
            method: "POST",
            body: formData,
          }).then((res) => {
            console.log(res.status, "res");

            if (res.status) {
              status = false
            }
            document.getElementById("statusOfSheetShipNotice").style.marginTop = "10px";
            document.getElementById("statusOfSheetShipNotice").style.fontSize = "20px";
            if (res.status === 200) {
              document.getElementById("statusOfSheetShipNotice").innerText =
              "Files Comparing Succesfully So Plz Check the Logs";

            } else if (res.status === 500) {
              document.getElementById("statusOfSheetShipNotice").innerText =
                "Throwing Error By reset processing..";
              document.getElementById("statusOfSheetShipNotice").style.color = "red";
            } else if (res.status === 422) {
              document.getElementById("statusOfSheetShipNotice").innerText =
                "Throwing Error By reset processing..";
              document.getElementById("statusOfSheetShipNotice").style.color = "red";
            }
          });
        } catch (e) {
          console.log(e, "e");
        }

      } else {
        alert("Please choose csv file");
        document.getElementById('fileInputShipNotice').value = '';
      }

    }

    async function importFileGPOS() {
      var name = document.getElementById("fileInputGPOS");
      if (name.files.item(0).name.endsWith('.csv')) {
        console.log(name.files[0], "name")
        try {
          const file = name.files[0];
          const formData = new FormData();
          formData.append("myFile", file);
          let status = true;
          if (status === true) {
            document.getElementById("statusOfSheetGPOS").innerText =
              "Checking the Sheet Data with DB";
            document.getElementById("statusOfSheetGPOS").style.color = "green";
            document.getElementById("statusOfSheetGPOS").style.marginTop = "10px";
            document.getElementById("statusOfSheetGPOS").style.fontSize = "20px";
          }
          const response = await fetch("/checkGPOSData", {
            method: "POST",
            body: formData,
          }).then((res) => {
            console.log(res.status, "res");

            if (res.status) {
              status = false
            }
            document.getElementById("statusOfSheetGPOS").style.marginTop = "10px";
            document.getElementById("statusOfSheetGPOS").style.fontSize = "20px";
            if (res.status === 200) {
              document.getElementById("statusOfSheetGPOS").innerText =
                "Files Comparing Succesfully So Plz Check the Logs";
            } else if (res.status === 500) {
              document.getElementById("statusOfSheetGPOS").innerText =
                "Throwing Error By reset processing..";
              document.getElementById("statusOfSheetGPOS").style.color = "red";
            } else if (res.status === 422) {
              document.getElementById("statusOfSheetGPOS").innerText =
                "Throwing Error By reset processing..";
              document.getElementById("statusOfSheetGPOS").style.color = "red";
            }
          });
        } catch (e) {
          console.log(e, "e");
        }

      } else {
        alert("Please choose csv file");
        document.getElementById('fileInputGPOS').value = '';
      }

    }
 </script>

</head>

<body>
  <div class="container-test">
    <div class="Connect\(Layout\)-content-249">
      <div class="Connect\(Layout\)-container-250">
        <div class="CustomersList-cardHeaderContent-349">
          <h3 class="CustomersList-cardIconTitle-347">End to End Testing</h3>
          <button class="RegularButton-primary-220">
            <a href="/">Log Out</a>
          </button>
        </div>


        <% if (error==false) { %>

          <div class="card-white">
            <table class="table table-striped table-class" id="table-id">
              <thead>
                <tr>
                  <th>Type</th>
                  <th>Test</th>
                  <th>Description</th>
                </tr>
              </thead>

              <tbody>

                <tr>
                  <td>Check Pre/post Deployment</td>
                  <td>
                    <button class="RegularButton-primary-220" onclick="checkPrePost()">
                      check Pre/post Deployment
                    </button>
                    <h5 class="CustomersList-cardIconTitle-347" id="prepostStatus"></h5>

                  <td>It will check pre and post Deployment of all PurchaseOrder and customers </td>
                  </td>
                </tr>
                <tr>
                  <td>Check CSVPriceSheet Data</td>
                  <td>
                    <div class="d-flex align-items-center">
                      <input type="file" id="fileInput" onchange="importFile()" />

                      <button class="RegularButton-primary-220">
                        Check CSVPriceSheet Data
                      </button>
                    </div>


                    <form class="form-inline my-2 my-lg-0 d-flex" action="/getCsvpriceSheetData" method="get">


                      <select class="form-select" name="filterTypePriceSheet" id="filterTypeOrderCheck"
                        style="width: 208px; margin-right: 95px;">

                        <% if (organizationData.length===0) { %>
                          <option value="NoOrg" id="NoOrg">NoOrgFound</option>

                          <%} else { %>

                            <% for(var i=0; i<organizationData.length; i++) {%>

                              <option value="<%=organizationData[i].id %>" id="<%=organizationData[i].id %>">
                                <%= organizationData[i].id %> - <%= organizationData[i].name %>
                              </option>

                              <% } %>
                                <% } %>
                      </select>
                      <button class="RegularButton-primary-220" type="submit">
                        Show CSVPriceSheet Logs
                      </button>

                    </form>



                    <br />
                    <p id="statusOfSheet"></p>

                  <td>It will check the Uploaded sheet data with all organization </td>
                  </td>
                </tr>
                <tr>
                  <td>Check ShipNotice Data</td>
                  <td>
                    <div class="d-flex align-items-center">

                      <input type="file" id="fileInputShipNotice" onchange="importFileShipNotice()" />

                      <button class="RegularButton-primary-220">
                        Check ShipNotice Data
                      </button>

                    </div>

              

                    <form class="form-inline my-2 my-lg-0 d-flex" action="/getShipNoticeGposLog" method="get">


                      <select class="form-select" name="filterTypeShipNotice" id="filterTypeShipNotice"
                        style="width: 208px; margin-right: 95px;">

                        <% if (organizationData.length===0) { %>
                          <option value="NoOrg" id="NoOrg">NoOrgFound</option>

                          <%} else { %>

                            <% for(var i=0; i<organizationData.length; i++) {%>

                              <option value="<%=organizationData[i].id %>" id="<%=organizationData[i].id %>">
                                <%= organizationData[i].id %> - <%= organizationData[i].name %>
                              </option>

                              <% } %>
                                <% } %>
                      </select>
                      <button class="RegularButton-primary-220" type="submit">
                        Show ShipNotice Logs
                      </button>

                    </form>
                    <br/>
                    <p id="statusOfSheetShipNotice"></p>

                  <td>It will check the Uploaded csv data with ShipNotice Data </td>
                  </td>
                </tr>

                <tr>
                  <td>Check GPOS Data</td>
                  <td>

                    <div class="d-flex align-items-center">
                      <input type="file" id="fileInputGPOS" onchange="importFileGPOS()" />

                      <button class="RegularButton-primary-220">
                        Check GPOS Data
                      </button>

                    </div>




                    <form class="form-inline my-2 my-lg-0 d-flex" action="/getShipNoticeGposLog" method="get">


                      <select class="form-select" name="filterTypeGPOS" id="filterTypeOrderCheck"
                        style="width: 208px; margin-right: 95px;">

                        <% if (organizationData.length===0) { %>
                          <option value="NoOrg" id="NoOrg">NoOrgFound</option>

                          <%} else { %>

                            <% for(var i=0; i<organizationData.length; i++) {%>

                              <option value="<%=organizationData[i].id %>" id="<%=organizationData[i].id %>">
                                <%= organizationData[i].id %> - <%= organizationData[i].name %>
                              </option>

                              <% } %>
                                <% } %>
                      </select>
                      <button class="RegularButton-primary-220" type="submit">
                        Show GPOS Logs
                      </button>

                    </form>
                    <br />
                    <p id="statusOfSheetGPOS"></p>

                  <td>It will check the Uploaded csv data with GPOS Data </td>
                  </td>
                </tr>



                <tr>
                  <td>See the last compare changes </td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/compare-result">Last compare changes </a>
                    </button>
                  <td> It will give a list of last compare changes of pre and post Deployment</td>
                  </td>
                </tr>
                <tr>
                <tr>
                  <td>Check crashed</td>
                  <td>
                    <button class="RegularButton-primary-220" onclick="checkCrashed()">
                      check crashed
                    </button>
                    <h5 class="CustomersList-cardIconTitle-347" id="APIstatus"></h5>
                  <td> It will check all feature of product app that are crashed or not </td>
                  </td>
                </tr>
                <tr>
                  <td>See the latest crashedReport </td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/getCrashedReport"> Check CrashedReport </a>
                    </button>
                  <td> It will give a list of crashed feature/pages list after a run checkCrahsed API</td>
                  </td>
                </tr>
                <tr>
                  <td>PurchaseOrder Check</td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/poCheck"> PO Check </a>
                    </button>
                  <td> It will give a list of missing Monsantoproduct and missing MonsantoProductLineItems data </td>
                  </td>
                </tr>
                <tr>
                  <td>SuperAdmin Check</td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/superAdmin"> Super Admin </a>
                    </button>
                  <td> It will give a list and count of all organization data with allCompaines , discount ,customers
                    ,PurchaseOrder ,Quote ,subscriptions </td>
                  </td>
                </tr>
                <tr>


                  <td>Bayer Order Check</td>

                  <td>
                    <form class="form-inline my-2 my-lg-0 d-flex" action="/bayerOrderCheck" method="post">



                      <button class="RegularButton-primary-220" type="submit">
                        <a> Bayer Order Check </a>
                      </button>


                      <select class="form-select" name="filterType" id="filterTypeOrderCheck"
                        style="width: 160px; margin-right: 20px;">

                        <% if (organizationData.length===0) { %>
                          <option value="NoOrg" id="NoOrg">NoOrgFound</option>

                          <%} else { %>
                            <option id="all" value="all">
                              All
                            </option>
                            <% for(var i=0; i<organizationData.length; i++) {%>

                              <option value="<%=organizationData[i].id %>" id="<%=organizationData[i].id %>">
                                <%= organizationData[i].id %> - <%= organizationData[i].name %>
                              </option>

                              <% } %>
                                <% } %>
                      </select>


                    </form>

                    <h5 class="CustomersList-cardIconTitle-347" id="bayerAPIstatus"></h5>


                  <td> It will give a list of those Order ,Quanity,LineNumber and LineItemNumber is not match with XMl
                    reposne of ProductBookingSummary </td>
                  </td>
                </tr>
                <tr>


                  <td>Create Topics</td>

                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/topicForm">Go To Form</a>
                    </button>
                  <td> Admin can create a topic and subtopics for tutorials</td>
                  </td>
                </tr>
                <td>API Logs </td>
                <td>

                  <button class="RegularButton-primary-220" onclick="getLogs()">
                    <a href="/apiLogs"> API Logs </a>
                  </button>
                <td> It will give a list of All API logs that are tun in productAPP</td>
                </td>
                </tr>
                <tr>
                <tr>
                  <td> DB Logs</td>
                  <td>
                    <button class="RegularButton-primary-220" onclick="getLogs()">
                      <a href="/dbLogs"> DB Logs </a>
                    </button>
                  <td> It will give a list of dataBase Logs </td>
                  </td>
                </tr>
                <tr>
                  <td> List Of Zones</td>
                  <td>
                    <button class="RegularButton-primary-220" onclick="getLogs()">
                      <a href="/listZones"> ListZone </a>
                    </button>
                  <td> It will give a list of corn and cotton zone for customer ,ApiSeedCompaines ,and bayer API data
                  </td>
                  </td>
                </tr>

                <tr>
                  <td>Backups PDF</td>
                  <td>
                    <div style="display:flex">
                      <button class="RegularButton-primary-220" onclick="backupPdf()">
                        Backups PDF
                      </button>
                      <select class="form-select" name="filterType" id="filterTypePDF" onchange="filterTypeSelected()"
                        style="width: 160px;
                          margin-right: 20px;">

                        <% if (organizationData&&organizationData.length===0) { %>
                          <option value="NoOrg" id="NoOrg">NoOrgFound</option>

                          <%} else { %>
                            <option id="all" value="all">
                              All
                            </option>
                            <% for(var i=0; i<organizationData.length; i++) {%>

                              <option value="<%=organizationData[i].name %>" id="<%=organizationData[i].name %>">
                                <%= organizationData[i].id %> - <%= organizationData[i].name %>
                              </option>

                              <% } %>
                                <% } %>
                      </select>
                    </div>
                    <h5 class="CustomersList-cardIconTitle-347" id="PDFAPIstatus"></h5>

                  <td> It will open a all Organization PurchaseOrder and store the InvoicePreview PDF to the DO Space
                  </td>
                  </td>

                </tr>
                <tr>
                  <td>Backup CSV </td>
                  <td>
                    <div style="display:flex">
                      <button class="RegularButton-primary-220" onclick="downloadCsv()">
                        Backup CSV
                      </button>
                      <select class="form-select" name="filterType" id="filterType" onchange="filterTypeSelected()"
                        style="width: 160px;
                      margin-right: 20px;">

                        <% if (organizationData.length===0) { %>
                          <option value="NoOrg" id="NoOrg">NoOrgFound</option>

                          <%} else { %>
                            <option id="all" value="all">
                              All
                            </option>
                            <% for(var i=0; i<organizationData.length; i++) {%>

                              <option value="<%=organizationData[i].name %>" id="<%=organizationData[i].name %>">
                                <%= organizationData[i].id %> - <%= organizationData[i].name %>
                              </option>

                              <% } %>
                                <% } %>
                      </select>
                    </div>

                    <h5 class="CustomersList-cardIconTitle-347" id="CSVAPIstatus"></h5>

                  <td> It will store all csv File from product app to the DO Space </td>
                  </td>
                </tr>
                <tr>
                  <td>Reset All Table</td>
                  <td>


                    <div style="display:flex">
                      <button class="RegularButton-primary-220" onclick="resetTable()">
                        Reset Table
                      </button>
                      <select class="form-select" name="filterType" id="filterTypeReset" onchange="filterTypeSelected()"
                        style="width: 160px;
                      margin-right: 20px;">

                        <% if (organizationData&&organizationData.length===0) { %>
                          <option value="NoOrg" id="NoOrg">NoOrgFound</option>

                          <%} else { %>
                            <option id="all" value="all">
                              All
                            </option>
                            <% for(var i=0; i<organizationData.length; i++) {%>

                              <option value="<%=organizationData[i].id %>" id="<%=organizationData[i].id %>">
                                <%= organizationData[i].id %> - <%= organizationData[i].name %>
                              </option>

                              <% } %>
                                <% } %>
                      </select>
                    </div>
                    <h5 class="CustomersList-cardIconTitle-347" id="resetTypePDF"></h5>
                  <td> Reset All the table to the latest connected DB </td>

                  </td>
                </tr>
                <tr>
                  <td> Check Sign Up User </td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/signUpUser"> Sign Up User </a>
                    </button>
                  <td> It will create a new account in product app </td>
                  </td>
                </tr>
                <tr>
                  <td> Test ProductAPP Feature</td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/hardCodeTest"> Test Entire APP </a>
                    </button>
                  <td> It will test all the feature of product app like.. Login ,Bayer connectivity,
                    Craete all 3Company's ,Product ,PurchaseOrder,Customer etc..</td>
                  </td>
                </tr>
                <tr>
                  <td> Test PaymentCalculation Feature</td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/checkPaymentCalculation"> Test PaymentCalculation APP </a>
                    </button>
                  <td> It will test PaymentCalculation</td>
                  </td>
                </tr>
                <tr>
                  <td> Test Wrong Login</td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/wrongLogInTest"> Wrong LogIn Test </a>
                    </button>
                  <td> It will enter a wrong login creaditinal of product app login page .</td>
                  </td>
                </tr>
                <tr>
                  <td>Test Discount Fail Cases</td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/checkFailTest"> Check Discount Fail Test cases </a>
                    </button>
                  <td>Test if a discount is failed when a hard coded value is incorrectly</td>
                  </td>
                </tr>

                <tr>
                  <td> AddCsvOrgData Feature</td>
                  <td>
                    <button class="RegularButton-primary-220">
                      <a href="/addCsvOrgData">Create New OrgAccounts </a>
                    </button>
                  <td> It will create a organization ,user and verify the email as well as create a API seed Company and
                    monsantoProduct based on CSV file data</td>
                  </td>
                </tr>

              </tbody>
            </table>
          </div>

          <% }else{ %>
            <div class="card-white">
              <div class="CustomersList-cardHeaderContent-349">
                <h5 class="CustomersList-cardIconTitle-347">
                  404 - Page Access denied
                </h5>
              </div>
              <button class="RegularButton-primary-220">
                <a href="/"> Back to login page </a>
              </button>
            </div>
            <% } %>
      </div>
    </div>
  </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

</html>